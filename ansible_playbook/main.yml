---

- hosts: "{{ WebServer1 }}"
  become: true
  pre_tasks:
    - name: Update and Upgrade
      tags: always
      apt:
        upgrade: dist
        update_cache: yes

  tasks:
    - name: Install mysql-client to configure db
      tags: mysql-client
      apt:
        name:
          - mysql-client
        state: latest
        update_cache: yes

    - name: create rds sql database and required table from first webserver
      tags: sql,db,rds
      command: |
         mysql -h{{ rds_endpoint }} -u{{ dbusername }} -p{{ dbpassword }} -e "CREATE DATABASE IF NOT EXISTS product_reviews; USE product_reviews; CREATE TABLE IF NOT EXISTS reviews (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), product_name VARCHAR(255), review TEXT);"


- hosts: all
  become: true
  pre_tasks:
    - name: Update and Upgrade
      tags: always
      apt:
        upgrade: dist
        update_cache: yes

  tasks:
    - name: install zip and unzip
      tags: zip,unzip
      apt:
        name:
           - zip
           - unzip
        state: absent
        update_cache: yes
    
    - name: install pip
      tags: zip,unzip
      apt:
        name:
           - python3-pip
        state: present
        update_cache: yes

    - name: Create environment file
      tags: environment,db
      copy:
         dest: /etc/productreview_app.env
         content: |
           MYSQL_HOST={{ rds_endpoint }}
           MYSQL_USER={{ dbusername }}
           MYSQL_PASSWORD={{ dbpassword }}
           MYSQL_DATABASE='product_reviews'
    
    - name: Install Docker
      tags: docker
      shell: |
          sudo apt-get -y update
          sudo apt-get -y install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get -y update
          sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Copy Docker compose file
      tags: docker,compose
      copy:
        src: ../docker-compose.yml 
        dest: /home/ubuntu/docker-compose.yml

    - name: Install aws cli
      command: sudo python3 -m pip install awscli
      

    - name: Pull Docker images and docker compose up
      tags: docker,pull,images
      shell: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin {{ aws_account_id }}.dkr.ecr.us-east-1.amazonaws.com
        sudo docker compose up -d



    