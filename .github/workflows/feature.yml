name: "Unit test and server config test"

on:
    push:
        branches:
            - feature

env:
  PRODUCT_REVIEW_VERSION: "2.0"
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ENVIRONMENT: dev        #just for ansible play --check

jobs:
    Tests:
        name: "Unittest_of_app_with_DB"
        runs-on: ubuntu-latest

        env:
            #These credentials are for test in runner
            MYSQL_HOST: 127.0.0.1
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_DATABASE: test_db
            #############################            
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Start MySql 
              run: |
                sudo service mysql start

            - name: Create DB and table
              run: |
                  mysql -h$MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASSWORD -e "CREATE DATABASE $MYSQL_DATABASE;" 
                  mysql -h$MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASSWORD -e "USE $MYSQL_DATABASE; CREATE TABLE reviews (id INT AUTO_INCREMENT PRIMARY KEY,name VARCHAR(255),product_name VARCHAR(255),review TEXT);"

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.8'
  
            - name: venv activate and install dependencies
              run: |
                python3 -m venv .venv
                source .venv/bin/activate
                python3 -m pip install --upgrade pip
                pip3 install -r requirements.txt
              working-directory: ./flask_app_code

            - name: Run tests
              run: |
                source .venv/bin/activate
                pytest
                deactivate
              working-directory: ./flask_app_code

    Server-RDS_DB-Monitoring_configs:
        name: "Ensures basic server configs,RDS mysql database,monitoring configs"
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Install Ansible,boto3 and store ssh key in runner
            run: |
              pip3 install ansible boto3
              mkdir -p /home/runner/.ssh/
              echo -e "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/.ssh/flask_ec2.pem
              chmod 600 ~/.ssh/flask_ec2.pem

          - name: Fetch RDS endpoint from AWS
            run: |
              rds_endpoint=$(aws rds --region us-east-1 describe-db-instances --db-instance-identifier ${ENVIRONMENT}productreviewdb --query 'DBInstances[*].Endpoint.Address' --output text) 
              echo "RDS_ENDPOINT=${rds_endpoint}" >> $GITHUB_ENV

          - name: Check configuring mysql rds db and run docker cluster creation in webservers
            env:
              RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
            run: |
              ansible-playbook -i ./inventory/hosts.aws_ec2.yaml \
              -u ${{ secrets.WEBSERVER_USER }} --private-key=/home/runner/.ssh/flask_ec2.pem main.yaml \
              --extra-vars "dbusername=${{ secrets.DBUSERNAME }} dbpassword=${{ secrets.DBPASSWORD }}" --check
            working-directory: ./ansible_playbook
          
 

         