name: "Unit test and deploy to dev server"

on:
    push:
        branches:
            - dev
            - feature

jobs:
    Tests_and_Deploy:
        name: "Unittest_of_app_with_DB_and_deploy"
        runs-on: ubuntu-latest

        env:
            TEST_MYSQL_HOST: 127.0.0.1
            TEST_MYSQL_USER: root
            TEST_MYSQL_PASSWORD: root
            TEST_MYSQL_DATABASE: test_db

            DB_INSTANCE_IDENTIFIER: devproductreviewdb
            WEB_SERVER_GROUP: tag_Name_devWebServer*
            WEBSERVER1: tag_Name_devWebServer1

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Start MySql 
              run: |
                sudo service mysql start

            - name: Create DB and table
              run: |
                mysql -h$TEST_MYSQL_HOST -u$TEST_MYSQL_USER -p$TEST_MYSQL_PASSWORD -e "CREATE DATABASE test_db;" 
                mysql -h$TEST_MYSQL_HOST -u$TEST_MYSQL_USER -p$TEST_MYSQL_PASSWORD -e "USE test_db; CREATE TABLE reviews (id INT AUTO_INCREMENT PRIMARY KEY,name VARCHAR(255),product_name VARCHAR(255),review TEXT);"

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.8'
  
            - name: venv activate and install dependencies
              run: |
                python3 -m venv .venv
                source .venv/bin/activate
                python3 -m pip install --upgrade pip
                pip3 install -r requirements.txt
              working-directory: ./flask_app_code

            - name: Run tests
              run: |
                source .venv/bin/activate
                pytest
                deactivate
              working-directory: ./flask_app_code

            - name: Configure AWS credentials
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_DEFAULT_REGION: us-east-1
              run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && aws configure set aws_default_region $AWS_DEFAULT_REGION

            - name: Install Ansible,boto3 and store ssh key in runner
              run: |
                   pip3 install ansible
                   pip3 install boto3
                   mkdir -p /home/runner/.ssh/
                   echo -e "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/.ssh/flask_ec2.pem
                   chmod 600 ~/.ssh/flask_ec2.pem

            - name: Fetch RDS endpoint from AWS
              run: |
                  rds_endpoint=$(aws rds --region us-east-1 describe-db-instances --db-instance-identifier $DB_INSTANCE_IDENTIFIER --query 'DBInstances[*].Endpoint.Address' --output text) 
                  echo "RDS_ENDPOINT=${rds_endpoint}" >> $GITHUB_ENV

            - name: Configure nginx to webservers and RDS mysql DB with playbook
              env:
                  RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
              run: |
                  ansible-playbook -i ./inventory/hosts.aws_ec2.yaml -u ${{ secrets.webserver_user }} --private-key=/home/runner/.ssh/flask_ec2.pem main.yml --limit $WEB_SERVER_GROUP --extra-vars "WebServer1=$WEBSERVER1 rds_endpoint=$RDS_ENDPOINT dbusername=${{ secrets.DBUSERNAME }} dbpassword=${{ secrets.DBPASSWORD }}"
              working-directory: ./ansible_playbook
