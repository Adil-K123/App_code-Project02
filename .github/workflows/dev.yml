name: "Unit test and deploy to dev server"

on:
    push:
        branches:
            - dev
            - feature

jobs:
    Tests_and_Deploy:
        name: "Unittest_of_app_with_DB_and_deploy"
        runs-on: ubuntu-latest

        env:
            #These credentials are for test in runner
            MYSQL_HOST: 127.0.0.1
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_DATABASE: test_db
            #############################
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            AWS_DEFAULT_REGION: us-east-1
            PRODUCT_REVIEW_VERSION: "1.0"
            CUSTOM_NGINX_VERSION: "5.0"
            DB_INSTANCE_IDENTIFIER: devproductreviewdb
            WEB_SERVER_GROUP: tag_Name_devWebServer*
            WEBSERVER1: tag_Name_devWebServer1

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Start MySql 
              run: |
                sudo service mysql start

            - name: Create DB and table
              run: |
                  mysql -h$MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASSWORD -e "CREATE DATABASE $MYSQL_DATABASE;" 
                  mysql -h$MYSQL_HOST -u$MYSQL_USER -p$MYSQL_PASSWORD -e "USE $MYSQL_DATABASE; CREATE TABLE reviews (id INT AUTO_INCREMENT PRIMARY KEY,name VARCHAR(255),product_name VARCHAR(255),review TEXT);"

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.8'
  
            - name: venv activate and install dependencies
              run: |
                python3 -m venv .venv
                source .venv/bin/activate
                python3 -m pip install --upgrade pip
                pip3 install -r requirements.txt
              working-directory: ./flask_app_code

            - name: Run tests
              run: |
                source .venv/bin/activate
                pytest
                deactivate
              working-directory: ./flask_app_code

            - name: Configure AWS credentials
              run: |
                aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && aws configure set aws_default_region $AWS_DEFAULT_REGION
                aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com


            # - name: Build and push Docker images for Productreview_app to ECR
            #   run: |
            #     cd ${{ github.workspace }}/flask_app_code
            #     docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/product_review:$PRODUCT_REVIEW_VERSION .
            #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/product_review:$PRODUCT_REVIEW_VERSION

            # - name: Build and push Docker images for nginx to ECR
            #   run: |
            #     cd ${{ github.workspace }}/nginx
            #     docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/custom_nginx:$CUSTOM_NGINX_VERSION .
            #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/custom_nginx:$CUSTOM_NGINX_VERSION

            - name: Install Ansible,boto3 and store ssh key in runner
              run: |
                   pip3 install ansible
                   pip3 install boto3
                   mkdir -p /home/runner/.ssh/
                   echo -e "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/.ssh/flask_ec2.pem
                   chmod 600 ~/.ssh/flask_ec2.pem

            - name: Fetch RDS endpoint from AWS
              run: |
                  rds_endpoint=$(aws rds --region us-east-1 describe-db-instances --db-instance-identifier $DB_INSTANCE_IDENTIFIER --query 'DBInstances[*].Endpoint.Address' --output text) 
                  echo "RDS_ENDPOINT=${rds_endpoint}" >> $GITHUB_ENV

            - name: Configure mysql rds db and docker commands in webservers
              env:
                  RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
              run: |
                  ansible-playbook -i ./inventory/hosts.aws_ec2.yaml -u ${{ secrets.webserver_user }} --private-key=/home/runner/.ssh/flask_ec2.pem main.yml --limit $WEB_SERVER_GROUP --extra-vars "WebServer1=$WEBSERVER1 rds_endpoint=$RDS_ENDPOINT dbusername=${{ secrets.DBUSERNAME }} dbpassword=${{ secrets.DBPASSWORD }} aws_account_id=$AWS_ACCOUNT_ID product_review_version=$PRODUCT_REVIEW_VERSION custom_nginx_version=$CUSTOM_NGINX_VERSION"
              working-directory: ./ansible_playbook
